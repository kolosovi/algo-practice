Какая идея. По идее, у нас для каждой цифры всего четыре варианта.
Всего получается 4^4 = 2^8 = 256 вариантов.

Но из них, очевидно, какие-то нелегальны.

HH:MM

[0-1][0-9] : [0-5][0-9]
2[0-3]     : [0-5][0-9]

hour1 range
hour2 range
hour2 range for after 8

minute1 range
minute2 range

Далее мы пересекаем эти рейнджи с цифрами. Получаем сократившиеся рейнджи. Их "отматываем" на текущее время (делаем ротацию).
Далее прибавляем 1.

На примере 19:34:

hour1:              [1]
hour2:              [1,3,4,9]
hour2 for after 8:  [1,3]

minute1: [1,3,4]
minute2: [1,3,4,9]

set to current time:
hour1: [1]
hour2: [9,1,3,4]
hour2 for after 8: [1, 3]
minute1: [3,4,1]
minute2: [4,9,1,3]

далее я прибавляю 1, и получается:
19:39

19:39

hour1: [1]
hour2: [9,1,3]
minute1: [3,1]
minute2: [9,1,3]

Прибавляю 1. Так как вышел за рамки, то делаю carry и прибавл]ю ко второй минуте. Там тоже вышел, делаю carry, прибавляю к часу. Там тоже вышел, делаю carry. Ну ОК симирон.

11:11 (damn?)

19:39

19:19

hour1:  [1]
hour2:  [1,9]
minute1: [1]
minute2: [1,9]

11:11*

minute2: just carries, minute1: just carries
hour2: well, just carries, too.

Next idea.

There are two cases:
1. There's a time after ours. Then pick the first time that's after ours.
2. There's no time after ours. Then pick the first time that's before ours. This is a time xx:xx where x is the smallest digit in our time.

AB:CD > ab:cd means:

A > a OR
    A = a AND (B > b OR
                B = b AND (C > c OR
                            C = c AND D > d))

So basically we just look:
1. Is there an available m2 that's bigger than ours? If so, return hh:mx where x is such a minute. Else: set minute to min digit
2. Is there an available m1 that's bigger than ours? If so, return hh:xm where x is such a minute. Else: set minute to min digit
and so on.
Return.
